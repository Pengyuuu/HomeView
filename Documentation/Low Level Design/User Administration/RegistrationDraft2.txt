title Registration
participant User
participant User Manager
participant Authorization Manager
participant User Management Service
participant "User Data Access Object" as dao
database database

User->User Manager: createUser(string email,\nstring fname, string lname)
activate User Manager
User Manager->Authorization Manager: AuthorizationManager(newUser)
activate Authorization Manager
Authorization Manager->User Manager: return User object
User Manager->Authorization Manager: checkNewUser(User object)
Authorization Manager->User Manager: return true
deactivate Authorization Manager
User Manager->User Management Service: UMService()
activate User Management Service

User Manager->User Management Service: createUser(User object)

User Management Service->dao: createUser(User object)
activate dao
dao->dao: log database access
dao->database: createUser(User object)
activate database
database->database:verify user
database->dao: return true (user not already in database)
dao->database: add new user into database
database->dao:return true
deactivate database

dao->dao:log database return time
dao->dao:log account creation date/time
dao->User Management Service:return true
deactivate dao
User Management Service->User Manager:return true
deactivate User Management Service
User Manager->User:return "Account has been successfully created"
deactivate User Manager